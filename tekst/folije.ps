%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: folije.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pcmz folije.dvi -o folije.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.07.17:1910
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (folije.dvi)
@start
%DVIPSBitmapFont: Fa ecrm1095 10.95 30
/Fa 30 179 df<B512FEA517057F951E>45 D<16C0A215011680A2150316005D1506A215
0E150CA2151C1518A215381530A21570156015E05DA214015DA2140392C7FCA25C140614
0E140CA2141C1418A214381430A214701460A214E05C13015CA2130391C8FCA25B1306A2
130E130CA2131C131813381330A213701360A213E05BA212015B120390C9FCA25A1206A2
120E120CA2121C1218A21238123012701260A212E05AA2225B7BC32D>47
D<14C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612F8A31D3D78
BC2D>49 D<EB07FC90383FFF8090B512E03901F00FF839078003FC48486C7E000E6D7E48
EC7F8048EC3FC012300070EC1FE01260A200FEEC0FF07E7FA56CC7FC121CC813E0151FA2
16C0153F1680157F160015FE4A5AA24A5A4A5A4A5A5D4A5A023EC7FC5C5C495A495A5C49
5A49C71230131E5B5B491460485A485A485A90C812E048B6FC5A5A4815C0B7FCA3243D7C
BC2D>I<EB07FC90383FFF8090B512E03901F807F83907C003FC48C66C7E000E6D7E48EC
7F80EA1F80486CEB3FC07FA56C5A0007C7FCC81380157FA216005D5D4A5A4A5A5DEC0FC0
023FC7FCEB1FFCECFF809038000FE0EC03F86E7E6E7E157F1680ED3FC0A216E0A2151F16
F0A2120C123F487E487EA4ED3FE05B6CC713C01270ED7F807E6CECFF00000F495A3907C0
03FC3903F80FF0C6B55A013F1380D907FCC7FC243F7CBC2D>I<150EA2151E153EA2157E
15FEA214011403A21406140E140C141814381430146014E014C0EB018013031400130613
0E130C5B133813305B13E05B485A120390C7FC1206120E120C5A123812305A12E0B8FCA3
C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<121C127FEAFF80A5EA7F00121CC7FCB3A312
1C127FEAFF80A5EA7F00121C092778A619>58 D<DB3FF0130C912603FFFE131C021FEBFF
80913A7FE00FC03C913AFF0001F07CD903FCEB0078D907F0EC3CFCD91FE0140F49481407
4948140349C8FC4848150149150012034848167CA24848163CA24848161CA2123F5B180C
127FA349160012FFAC127F7F180CA2123FA27F001F171C18186C7EA26C6C163818306C6C
1670000117606D16E06C6CED01C06D6CEC03806D6C14076D6CEC0F00D907F0141ED903FC
5CD900FF14F091397FE007E0021FB51280020349C7FC9138003FF036427BBF41>67
D<B612C0A30001EBE00038007F80B3B3B23801FFE0B612C0A31A3E7DBD21>73
D<B600C090380FFFF8A3C601C0C7000313806D48913801FC006018E04D5A604DC7FC170E
5F5F17F0EE01C04C5A4CC8FC160E5E5E5E5E4B5A4B5A15074B7E151F4B7E4B7E15FF9138
81CFF891388387FCEC870791388E03FE91389C01FF14B8DAF0007F4A6D7E1480707E707E
A2707E707EA2707E707EA2707F717EA2717E717EA2717E84717E4D7E496C4A1380B600C0
90B512FCA33E3E7DBD46>75 D<B712F016FF17C0C69039C0003FF06D48EB07F8EE01FE70
7E831880EF3FC0A2EF1FE0A218F0A818E0A2EF3FC0A2EF7F80180017FEEE03FC4C5AEE3F
E091B6128004FCC7FC0280C9FCB3A7497EB612C0A3343E7DBD3D>80
D<D907FC131890393FFF803890B512E03A01FC03F8783903F0007CD807C0EB1EF8484813
0F48C71207481403003E1401007E1400A2007C157812FCA21638A36C1518A27EA26C6C14
007F7FEA3FF813FF6C13F06C13FF15F06C14FC0001806CECFF80013F14C0010714E0EB00
7F020713F09138007FF8151FED0FFC15071503ED01FEA200C01400A3167EA27EA3167C7E
16FC6C15F86C14016C15F06C14036DEB07E0D8FBE0EB0FC0D8F1F8EB1F80D8F07FEB7F00
39E01FFFFC010713F039C0007FC027427BBF32>83 D<003FB9FCA3D9E000EBC00190C739
7F80003F007EEF1F80007C170F0078170700701703A300601701A548EF00C0A5C81600B3
B24B7E4A7F0107B612F8A33A3E7DBD41>I<EB1FF0EBFFFC3803E03F390F000FC0001C6D
7E001F6D7E486C6C7E6D6C7EA3157E6C5A6CC7FCC8FCA4EC1FFEEB03FF90381FF87EEB7F
803801FC00EA07F0485A485A485A127F90C7FC160312FEA315FEA21401007F14BE14033A
3F80071F06261FC00E138E3A0FF03C0FFC3A03FFF007F83A003FC003E0282A7CA82D>97
D<49B4FC010F13E090383F00F8017C131E484813074848131F4848EB3F804848137FA248
5AA248C7EA3F00151E4891C7FCA2127E12FEAB127FA36C15C07F001F14016D1480000F14
036C6CEB07006C6C13066C6C131E6C6C133890383F01F090380FFFC0D901FEC7FC222A7D
A828>99 D<ED01F815FFA3150715031501B114FF010713C190381F80F190387C00394848
131D4848130F4848130748481303A248481301123F90C7FC5AA3127E12FEAA127E127FA2
7E7F001F1403A26C6C13076C6C130F6C6CEB0DFC6C6CEB3DFE6C6C903871FFF090383F01
E190380FFF81903A01FE01F8002C407DBE32>I<EB03FC90381FFF8090387E07E09038F8
01F048486C7E4848137C48487F000F143F48487F168048C7FC150F5A16C0127EA212FEA2
B7FCA248C9FCA6127E127FA36C15C07F001F14016C6C148015036C6CEB07006C6C130E6C
6C5B6C6C5B90383F01F090380FFFC0D901FEC7FC222A7DA828>I<EA01C0EA07F0487EA5
6C5AEA01C0C8FCACEA01F8127FA3120712031201B3AC487EB512E0A3133D7EBC19>105
D<1470EB01FCEB03FEA5EB01FCEB00701400AC14FE133FA313011300147EB3B3A6123C00
7E137CB413FCA214F8130100FE13F0387803E0383E07C0380FFF00EA01FC175084BC1C>
I<EA01F812FFA3120712031201B292387FFF80A392381FFC00ED0FE016804BC7FC151C5D
5D5DEC03C04AC8FC140E141E143E147F9038F9FF809038FB9FC0EBFF0F496C7E01FC7FEB
F8036E7E816E7E157E8182151F6F7E826F7EA282486C14FEB539F03FFFE0A32B3F7EBE30
>I<EA01F812FFA3120712031201B3B3B1487EB512F0A3143F7EBE19>I<2701F803FCEB01
FE00FF903B0FFF8007FFC0913B3C0FC01E07E0913BF003E07801F02607F9C0D9F0E07F3D
03FB8001F9C000FC000101005C01FFD900FF147E4992C7FCA2495CA2495CB3A6486C496C
14FFB528F07FFFF83F13FCA346287EA74B>I<3901F803FC00FF90380FFF8091383C0FC0
9138F003E02607F9C07F3A03FB8001F80001130001FF6D7E5BA25BA25BB3A6486C497EB5
39F07FFFF8A32D287EA732>I<EB01FE90380FFFC090383F03F090387C00F8D801F0133E
48487F4848EB0F80A24848EB07C0001F15E090C712034815F0A2007EEC01F8A400FE15FC
A9007E15F8A3007F14036C15F0A26C6CEB07E0000F15C06D130F000715806C6CEB1F006C
6C133ED800FC13FC90383F03F090380FFFC0D901FEC7FC262A7DA82D>I<3901F807F800
FFEB1FFF9138780FC09039F9E003F03A03FB8001F86CB4C77E49147E49147FEE3F804914
1F17C0A2EE0FE0A317F01607A9EE0FE0A4EE1FC0A2EE3F806D15006D5C16FE6D495A9039
FB8003F89039F9C007E09039F8F81F80DA3FFEC7FCEC07F091C9FCAD487EB512F0A32C3A
7EA732>I<3903F00FC000FFEB3FF0ECF0F89038F1C3FC00071383EA03F33801F70313F6
EC01F89038FE0060491300A45BB3A4487EB512F8A31E287EA723>114
D<90387FC0603903FFF8E03807C03D381E000F481303481301A20070130012F01560A27E
A27EB41400EA7FC013FE383FFFE06C13FC00077F6CEBFF80C66C13C0010713E0EB003FEC
0FF000C01303EC01F814007E1578A27EA27E15F07EEC01E06C14C039F780078039F1E01F
0038E0FFFC38C01FE01D2A7DA824>I<1318A61338A41378A213F8A2120112031207001F
B512C0B6FCA2D801F8C7FCB3A21560A96C6C13E015C0A2EB7E0190383F038090381F8700
EB07FEEB01F81B397EB723>I<D801F814FC00FF147FA3000714030003140100011400B3
A51501A3150312006D1307ED0EFE017C497E6D4913F890381F80F0903807FFE001009038
00FC002D297EA732>I<00401420006014600078EB01E06CEB03C0001FEB0F80390F801F
003807C03E3803F0FC3801F9F86CB45A6D5AEB1F806DC7FC130690C8FCA490387FC06039
03FFF8E0380F803D381E000F481303481301A2481300A21560A27EA27EB41400EA7FC013
FE383FFFE06C13FC00077F6CEBFF80C66C13C0010713E0EB003FEC0FF000C01303EC01F8
14007E1578A27EA27E15706C14F015E06C130139F78003C039F1E01F8039E0FFFE0038C0
1FF01D3C7DBA24>178 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 382 2573 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: shmem_bnch.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: shm_bnch.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue May 29 22:56:37 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 420 M
63 0 V
5933 0 R
-63 0 V
882 420 M
(0) Rshow
966 865 M
63 0 V
5933 0 R
-63 0 V
882 865 M
(5e-05) Rshow
966 1310 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.0001) Rshow
966 1756 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.00015) Rshow
966 2201 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.0002) Rshow
966 2646 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.00025) Rshow
966 3091 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.0003) Rshow
966 3536 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.00035) Rshow
966 3982 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.0004) Rshow
966 4427 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.00045) Rshow
966 4872 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
(0.0005) Rshow
966 420 M
0 63 V
0 4389 R
0 -63 V
966 280 M
(0) Cshow
2447 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(500) Cshow
3928 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
5410 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1500) Cshow
6891 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(2000) Cshow
1.000 UL
LTb
966 420 M
5996 0 V
0 4452 V
-5996 0 V
966 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(t \(s\)) Cshow
grestore
3964 70 M
(velicina tijela poruke \(B\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
('SharedMem') Rshow
966 554 Pls
990 598 Pls
1013 598 Pls
1037 598 Pls
1061 598 Pls
1084 598 Pls
1108 598 Pls
1132 598 Pls
1156 598 Pls
1179 598 Pls
1203 598 Pls
1227 598 Pls
1250 598 Pls
1274 598 Pls
1298 598 Pls
1321 598 Pls
1345 598 Pls
1369 643 Pls
1393 598 Pls
1416 643 Pls
1440 598 Pls
1464 643 Pls
1487 598 Pls
1511 643 Pls
1535 643 Pls
1558 598 Pls
1582 643 Pls
1606 643 Pls
1630 643 Pls
1653 643 Pls
1677 643 Pls
1701 643 Pls
1724 598 Pls
1748 643 Pls
1772 643 Pls
1795 643 Pls
1819 643 Pls
1843 643 Pls
1867 643 Pls
1890 687 Pls
1914 643 Pls
1938 643 Pls
1961 643 Pls
1985 643 Pls
2009 643 Pls
2032 643 Pls
2056 687 Pls
2080 643 Pls
2104 643 Pls
2127 643 Pls
2151 643 Pls
2175 687 Pls
2198 643 Pls
2222 687 Pls
2246 643 Pls
2269 643 Pls
2293 687 Pls
2317 643 Pls
2341 687 Pls
2364 643 Pls
2388 643 Pls
2412 643 Pls
2435 687 Pls
2459 687 Pls
2483 687 Pls
2506 643 Pls
2530 687 Pls
2554 687 Pls
2578 643 Pls
2601 687 Pls
2625 687 Pls
2649 687 Pls
2672 687 Pls
2696 687 Pls
2720 643 Pls
2743 687 Pls
2767 687 Pls
2791 687 Pls
2815 687 Pls
2838 687 Pls
2862 643 Pls
2886 687 Pls
2909 687 Pls
2933 687 Pls
2957 687 Pls
2980 687 Pls
3004 687 Pls
3028 687 Pls
3052 732 Pls
3075 687 Pls
3099 687 Pls
3123 687 Pls
3146 732 Pls
3170 687 Pls
3194 687 Pls
3217 687 Pls
3241 732 Pls
3265 687 Pls
3289 732 Pls
3312 687 Pls
3336 687 Pls
3360 732 Pls
3383 687 Pls
3407 732 Pls
3431 687 Pls
3454 732 Pls
3478 687 Pls
3502 732 Pls
3526 687 Pls
3549 732 Pls
3573 732 Pls
3597 687 Pls
3620 732 Pls
3644 687 Pls
3668 732 Pls
3691 687 Pls
3715 732 Pls
3739 732 Pls
3763 687 Pls
3786 732 Pls
3810 687 Pls
3834 732 Pls
3857 687 Pls
3881 732 Pls
3905 687 Pls
3928 687 Pls
3952 732 Pls
3976 776 Pls
4000 776 Pls
4023 732 Pls
4047 776 Pls
4071 776 Pls
4094 776 Pls
4118 732 Pls
4142 776 Pls
4165 776 Pls
4189 776 Pls
4213 732 Pls
4237 776 Pls
4260 776 Pls
4284 776 Pls
4308 776 Pls
4331 732 Pls
4355 776 Pls
4379 776 Pls
4402 776 Pls
4426 776 Pls
4450 776 Pls
4474 776 Pls
4497 776 Pls
4521 776 Pls
4545 776 Pls
4568 821 Pls
4592 776 Pls
4616 776 Pls
4639 821 Pls
4663 776 Pls
4687 776 Pls
4711 821 Pls
4734 776 Pls
4758 821 Pls
4782 776 Pls
4805 776 Pls
4829 821 Pls
4853 776 Pls
4876 821 Pls
4900 776 Pls
4924 821 Pls
4948 821 Pls
4971 776 Pls
4995 821 Pls
5019 776 Pls
5042 821 Pls
5066 821 Pls
5090 776 Pls
5113 821 Pls
5137 821 Pls
5161 776 Pls
5185 821 Pls
5208 821 Pls
5232 821 Pls
5256 776 Pls
5279 821 Pls
5303 821 Pls
5327 821 Pls
5350 776 Pls
5374 821 Pls
5398 821 Pls
5422 821 Pls
5445 821 Pls
5469 776 Pls
5493 821 Pls
5516 821 Pls
5540 821 Pls
5564 821 Pls
5587 776 Pls
5611 821 Pls
5635 821 Pls
5659 821 Pls
5682 821 Pls
5706 821 Pls
5730 776 Pls
5753 821 Pls
5777 821 Pls
5801 821 Pls
5824 821 Pls
5848 821 Pls
5872 776 Pls
5896 821 Pls
5919 821 Pls
5943 821 Pls
5967 821 Pls
5990 821 Pls
6014 821 Pls
6038 821 Pls
6061 776 Pls
6085 821 Pls
6109 821 Pls
6133 821 Pls
6156 821 Pls
6180 821 Pls
6204 821 Pls
6227 821 Pls
6251 821 Pls
6275 821 Pls
6298 865 Pls
6322 821 Pls
6346 821 Pls
6370 821 Pls
6393 821 Pls
6417 821 Pls
6441 821 Pls
6464 821 Pls
6488 821 Pls
6512 821 Pls
6535 821 Pls
6559 821 Pls
6583 821 Pls
6607 821 Pls
6630 821 Pls
6654 821 Pls
6678 776 Pls
6701 821 Pls
6725 821 Pls
6749 821 Pls
6772 821 Pls
6796 821 Pls
6820 821 Pls
6844 821 Pls
6867 821 Pls
6891 821 Pls
6915 732 Pls
6938 776 Pls
6962 732 Pls
6594 4739 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 556 2868 a Fa(Slik)-5 b(a)31 b(1:)40 b(Ka\262njenje)31
b(p)s(oruk)m(e)g(k)m(o)s(d)f(k)m(om)m(unik)-5 b(acije)32
b(dijeljenom)f(memorijom)382 5077 y @beginspecial 50
@llx 50 @lly 410 @urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: tcp_bnch.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tcp_bnch.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri May 25 18:15:02 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
(0) Rshow
798 865 M
63 0 V
6101 0 R
-63 0 V
714 865 M
(0.005) Rshow
798 1310 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.01) Rshow
798 1756 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.015) Rshow
798 2201 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.02) Rshow
798 2646 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.025) Rshow
798 3091 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.03) Rshow
798 3536 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.035) Rshow
798 3982 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.04) Rshow
798 4427 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.045) Rshow
798 4872 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(0.05) Rshow
798 420 M
0 63 V
0 4389 R
0 -63 V
798 280 M
(0) Cshow
2321 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(500) Cshow
3843 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
5366 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1500) Cshow
6889 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(2000) Cshow
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(t \(s\)) Cshow
grestore
3880 70 M
(velicina tijela poruke \(B\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
('TCPConnection') Rshow
798 3982 Pls
822 3536 Pls
847 3982 Pls
871 3091 Pls
895 3982 Pls
920 3536 Pls
944 3982 Pls
969 3982 Pls
993 3536 Pls
1017 3091 Pls
1042 3536 Pls
1066 3091 Pls
1090 3536 Pls
1115 3536 Pls
1139 3536 Pls
1163 3982 Pls
1188 4427 Pls
1212 3536 Pls
1237 3091 Pls
1261 3536 Pls
1285 3091 Pls
1310 3536 Pls
1334 3091 Pls
1358 3091 Pls
1383 3536 Pls
1407 3536 Pls
1431 3536 Pls
1456 3536 Pls
1480 3536 Pls
1505 3536 Pls
1529 3536 Pls
1553 3536 Pls
1578 3536 Pls
1602 3982 Pls
1626 2646 Pls
1651 3982 Pls
1675 3982 Pls
1699 3536 Pls
1724 3982 Pls
1748 3536 Pls
1773 3091 Pls
1797 3536 Pls
1821 3536 Pls
1846 3536 Pls
1870 3536 Pls
1894 3536 Pls
1919 4427 Pls
1943 3091 Pls
1967 3982 Pls
1992 3536 Pls
2016 4427 Pls
2041 3536 Pls
2065 3536 Pls
2089 3536 Pls
2114 3536 Pls
2138 3982 Pls
2162 3091 Pls
2187 3982 Pls
2211 3536 Pls
2235 3536 Pls
2260 3091 Pls
2284 3536 Pls
2309 3536 Pls
2333 3536 Pls
2357 3536 Pls
2382 3982 Pls
2406 3091 Pls
2430 3536 Pls
2455 3982 Pls
2479 3536 Pls
2503 3982 Pls
2528 3536 Pls
2552 3536 Pls
2577 3982 Pls
2601 2201 Pls
2625 2201 Pls
2650 2201 Pls
2674 2201 Pls
2698 2201 Pls
2723 2201 Pls
2747 2201 Pls
2771 2201 Pls
2796 2201 Pls
2820 2201 Pls
2845 2201 Pls
2869 2201 Pls
2893 2201 Pls
2918 2201 Pls
2942 2201 Pls
2966 2201 Pls
2991 2201 Pls
3015 2201 Pls
3039 2201 Pls
3064 2201 Pls
3088 2201 Pls
3113 2201 Pls
3137 2201 Pls
3161 2201 Pls
3186 1756 Pls
3210 1756 Pls
3234 1756 Pls
3259 1756 Pls
3283 1756 Pls
3307 1310 Pls
3332 1310 Pls
3356 1310 Pls
3381 1310 Pls
3405 1310 Pls
3429 1310 Pls
3454 1310 Pls
3478 1310 Pls
3502 1310 Pls
3527 1310 Pls
3551 1310 Pls
3575 1310 Pls
3600 1310 Pls
3624 1310 Pls
3649 1310 Pls
3673 1310 Pls
3697 1310 Pls
3722 1310 Pls
3746 1310 Pls
3770 1310 Pls
3795 1310 Pls
3819 1310 Pls
3843 1310 Pls
3868 1310 Pls
3892 1310 Pls
3917 1310 Pls
3941 1310 Pls
3965 1310 Pls
3990 1310 Pls
4014 1310 Pls
4038 1310 Pls
4063 1310 Pls
4087 1310 Pls
4111 1310 Pls
4136 1310 Pls
4160 1310 Pls
4185 1310 Pls
4209 1310 Pls
4233 1310 Pls
4258 1310 Pls
4282 1310 Pls
4306 1310 Pls
4331 1310 Pls
4355 1310 Pls
4379 1310 Pls
4404 1310 Pls
4428 1310 Pls
4453 1310 Pls
4477 1310 Pls
4501 1310 Pls
4526 1310 Pls
4550 1310 Pls
4574 1310 Pls
4599 1310 Pls
4623 1310 Pls
4647 1310 Pls
4672 1310 Pls
4696 1310 Pls
4721 1310 Pls
4745 1310 Pls
4769 1310 Pls
4794 1310 Pls
4818 1310 Pls
4842 1310 Pls
4867 1310 Pls
4891 1310 Pls
4915 1310 Pls
4940 1310 Pls
4964 1310 Pls
4989 1310 Pls
5013 1310 Pls
5037 1310 Pls
5062 1310 Pls
5086 1310 Pls
5110 1310 Pls
5135 1310 Pls
5159 1310 Pls
5183 1310 Pls
5208 3091 Pls
5232 3091 Pls
5257 3091 Pls
5281 3091 Pls
5305 3091 Pls
5330 3091 Pls
5354 3091 Pls
5378 3091 Pls
5403 3091 Pls
5427 3091 Pls
5451 3091 Pls
5476 3091 Pls
5500 3091 Pls
5525 3091 Pls
5549 3091 Pls
5573 3091 Pls
5598 3091 Pls
5622 3091 Pls
5646 3091 Pls
5671 3091 Pls
5695 3091 Pls
5719 3091 Pls
5744 3091 Pls
5768 3091 Pls
5793 3091 Pls
5817 3091 Pls
5841 3091 Pls
5866 3091 Pls
5890 3091 Pls
5914 3091 Pls
5939 3091 Pls
5963 3091 Pls
5987 3091 Pls
6012 3091 Pls
6036 3091 Pls
6061 3091 Pls
6085 3091 Pls
6109 3091 Pls
6134 3091 Pls
6158 3091 Pls
6182 3091 Pls
6207 3091 Pls
6231 3091 Pls
6255 3091 Pls
6280 3091 Pls
6304 3091 Pls
6329 3091 Pls
6353 3091 Pls
6377 3091 Pls
6402 3091 Pls
6426 3091 Pls
6450 3091 Pls
6475 3091 Pls
6499 3091 Pls
6523 3091 Pls
6548 3091 Pls
6572 3091 Pls
6597 3091 Pls
6621 3091 Pls
6645 3091 Pls
6670 3091 Pls
6694 3091 Pls
6718 3091 Pls
6743 3091 Pls
6767 3091 Pls
6791 3091 Pls
6816 3091 Pls
6840 3091 Pls
6865 3091 Pls
6889 3091 Pls
6913 3091 Pls
6938 3091 Pls
6962 3091 Pls
6594 4739 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 756 5372 a(Slik)-5 b(a)31 b(2:)40 b(Ka\262njenje)30
b(p)s(oruk)m(e)h(k)m(o)s(d)g(k)m(om)m(unik)-5 b(acije)31
b(TCP/IP-om)p eop
%%Page: 2 2
2 1 bop 382 2573 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: shmem_bndw.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: shmem_bndw.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Tue May 29 23:11:16 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
798 420 M
63 0 V
6101 0 R
-63 0 V
714 420 M
(0) Rshow
798 1162 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(10000) Rshow
798 1904 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(20000) Rshow
798 2646 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(30000) Rshow
798 3388 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(40000) Rshow
798 4130 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(50000) Rshow
798 4872 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
(60000) Rshow
798 420 M
0 63 V
0 4389 R
0 -63 V
798 280 M
(0) Cshow
2321 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(500) Cshow
3843 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
5366 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1500) Cshow
6889 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(2000) Cshow
1.000 UL
LTb
798 420 M
6164 0 V
0 4452 V
-6164 0 V
798 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(propusnost \(KB/s\)) Cshow
grestore
3880 70 M
(velicina tijela poruke \(B\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
('SharedMem') Rshow
798 420 Pls
822 449 Pls
847 478 Pls
871 507 Pls
895 536 Pls
920 565 Pls
944 594 Pls
969 623 Pls
993 652 Pls
1017 681 Pls
1042 710 Pls
1066 739 Pls
1090 768 Pls
1115 797 Pls
1139 826 Pls
1163 855 Pls
1188 884 Pls
1212 814 Pls
1237 942 Pls
1261 861 Pls
1285 1000 Pls
1310 907 Pls
1334 1058 Pls
1358 953 Pls
1383 977 Pls
1407 1145 Pls
1431 1023 Pls
1456 1046 Pls
1480 1069 Pls
1505 1092 Pls
1529 1116 Pls
1553 1139 Pls
1578 1348 Pls
1602 1185 Pls
1626 1208 Pls
1651 1232 Pls
1675 1255 Pls
1699 1278 Pls
1724 1301 Pls
1748 1174 Pls
1773 1348 Pls
1797 1371 Pls
1821 1394 Pls
1846 1417 Pls
1870 1440 Pls
1894 1463 Pls
1919 1309 Pls
1943 1510 Pls
1967 1533 Pls
1992 1556 Pls
2016 1579 Pls
2041 1405 Pls
2065 1626 Pls
2089 1444 Pls
2114 1672 Pls
2138 1695 Pls
2162 1502 Pls
2187 1742 Pls
2211 1541 Pls
2235 1788 Pls
2260 1811 Pls
2284 1834 Pls
2309 1618 Pls
2333 1637 Pls
2357 1657 Pls
2382 1927 Pls
2406 1695 Pls
2430 1715 Pls
2455 1997 Pls
2479 1753 Pls
2503 1773 Pls
2528 1792 Pls
2552 1811 Pls
2577 1831 Pls
2601 2136 Pls
2625 1869 Pls
2650 1889 Pls
2674 1908 Pls
2698 1927 Pls
2723 1947 Pls
2747 2275 Pls
2771 1985 Pls
2796 2004 Pls
2820 2024 Pls
2845 2043 Pls
2869 2062 Pls
2893 2082 Pls
2918 2101 Pls
2942 1878 Pls
2966 2140 Pls
2991 2159 Pls
3015 2178 Pls
3039 1944 Pls
3064 2217 Pls
3088 2236 Pls
3113 2256 Pls
3137 2010 Pls
3161 2294 Pls
3186 2043 Pls
3210 2333 Pls
3234 2352 Pls
3259 2093 Pls
3283 2391 Pls
3307 2126 Pls
3332 2430 Pls
3356 2159 Pls
3381 2468 Pls
3405 2192 Pls
3429 2507 Pls
3454 2225 Pls
3478 2242 Pls
3502 2565 Pls
3527 2275 Pls
3551 2603 Pls
3575 2308 Pls
3600 2642 Pls
3624 2341 Pls
3649 2358 Pls
3673 2700 Pls
3697 2391 Pls
3722 2739 Pls
3746 2424 Pls
3770 2777 Pls
3795 2457 Pls
3819 2816 Pls
3843 2835 Pls
3868 2507 Pls
3892 2261 Pls
3917 2275 Pls
3941 2557 Pls
3965 2304 Pls
3990 2318 Pls
4014 2333 Pls
4038 2623 Pls
4063 2362 Pls
4087 2376 Pls
4111 2391 Pls
4136 2689 Pls
4160 2420 Pls
4185 2434 Pls
4209 2449 Pls
4233 2463 Pls
4258 2772 Pls
4282 2492 Pls
4306 2507 Pls
4331 2521 Pls
4355 2536 Pls
4379 2550 Pls
4404 2565 Pls
4428 2579 Pls
4453 2594 Pls
4477 2608 Pls
4501 2378 Pls
4526 2637 Pls
4550 2652 Pls
4574 2417 Pls
4599 2681 Pls
4623 2695 Pls
4647 2455 Pls
4672 2724 Pls
4696 2481 Pls
4721 2753 Pls
4745 2768 Pls
4769 2520 Pls
4794 2797 Pls
4818 2546 Pls
4842 2826 Pls
4867 2571 Pls
4891 2584 Pls
4915 2869 Pls
4940 2610 Pls
4964 2898 Pls
4989 2636 Pls
5013 2649 Pls
5037 2942 Pls
5062 2674 Pls
5086 2687 Pls
5110 2985 Pls
5135 2713 Pls
5159 2726 Pls
5183 2739 Pls
5208 3043 Pls
5232 2765 Pls
5257 2777 Pls
5281 2790 Pls
5305 3101 Pls
5330 2816 Pls
5354 2829 Pls
5378 2842 Pls
5403 2855 Pls
5427 3174 Pls
5451 2880 Pls
5476 2893 Pls
5500 2906 Pls
5525 2919 Pls
5549 3246 Pls
5573 2945 Pls
5598 2958 Pls
5622 2971 Pls
5646 2984 Pls
5671 2996 Pls
5695 3333 Pls
5719 3022 Pls
5744 3035 Pls
5768 3048 Pls
5793 3061 Pls
5817 3074 Pls
5841 3420 Pls
5866 3099 Pls
5890 3112 Pls
5914 3125 Pls
5939 3138 Pls
5963 3151 Pls
5987 3164 Pls
6012 3177 Pls
6036 3536 Pls
6061 3203 Pls
6085 3215 Pls
6109 3228 Pls
6134 3241 Pls
6158 3254 Pls
6182 3267 Pls
6207 3280 Pls
6231 3293 Pls
6255 3306 Pls
6280 3029 Pls
6304 3331 Pls
6329 3344 Pls
6353 3357 Pls
6377 3370 Pls
6402 3383 Pls
6426 3396 Pls
6450 3409 Pls
6475 3421 Pls
6499 3434 Pls
6523 3447 Pls
6548 3460 Pls
6572 3473 Pls
6597 3486 Pls
6621 3499 Pls
6645 3512 Pls
6670 3913 Pls
6694 3537 Pls
6718 3550 Pls
6743 3563 Pls
6767 3576 Pls
6791 3589 Pls
6816 3602 Pls
6840 3615 Pls
6865 3628 Pls
6889 3640 Pls
6913 4577 Pls
6938 4072 Pls
6962 4610 Pls
6962 4610 Pls
6594 4739 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 1114 2868 a Fa(Slik)-5 b(a)31 b(3:)40 b(Propusnost)32
b(dijeljene)e(memorije)382 5077 y @beginspecial 50 @llx
50 @lly 410 @urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: tcp_bndw.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tcp_bndw.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri May 25 18:22:20 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
546 420 M
(0) Rshow
630 976 M
63 0 V
6269 0 R
-63 0 V
546 976 M
(20) Rshow
630 1533 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(40) Rshow
630 2089 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(60) Rshow
630 2646 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(80) Rshow
630 3202 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(100) Rshow
630 3759 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(120) Rshow
630 4315 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(140) Rshow
630 4872 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
(160) Rshow
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
(0) Cshow
2194 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(500) Cshow
3758 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1000) Cshow
5323 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(1500) Cshow
6887 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
(2000) Cshow
1.000 UL
LTb
630 420 M
6332 0 V
0 4452 V
-6332 0 V
630 420 L
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(propusnost \(KB/s\)) Cshow
grestore
3796 70 M
(velicina tijela poruke \(B\)) Cshow
1.000 UP
1.000 UL
LT0
6311 4739 M
('TCPConnection') Rshow
630 420 Pls
655 426 Pls
680 431 Pls
705 442 Pls
730 442 Pls
755 451 Pls
780 453 Pls
805 458 Pls
830 470 Pls
855 485 Pls
880 482 Pls
905 500 Pls
930 495 Pls
955 501 Pls
980 507 Pls
1005 502 Pls
1030 497 Pls
1055 526 Pls
1080 550 Pls
1106 538 Pls
1131 565 Pls
1156 550 Pls
1181 579 Pls
1206 587 Pls
1231 569 Pls
1256 575 Pls
1281 581 Pls
1306 588 Pls
1331 594 Pls
1356 600 Pls
1381 606 Pls
1406 613 Pls
1431 619 Pls
1456 599 Pls
1481 716 Pls
1506 610 Pls
1531 616 Pls
1556 650 Pls
1581 627 Pls
1606 662 Pls
1631 710 Pls
1656 675 Pls
1681 681 Pls
1706 687 Pls
1731 693 Pls
1756 699 Pls
1781 642 Pls
1806 761 Pls
1831 681 Pls
1856 724 Pls
1881 662 Pls
1906 737 Pls
1931 743 Pls
1956 749 Pls
1981 755 Pls
2007 719 Pls
2032 826 Pls
2057 730 Pls
2082 780 Pls
2107 786 Pls
2132 855 Pls
2157 799 Pls
2182 805 Pls
2207 811 Pls
2232 817 Pls
2257 773 Pls
2282 898 Pls
2307 836 Pls
2332 790 Pls
2357 849 Pls
2382 800 Pls
2407 861 Pls
2432 867 Pls
2457 817 Pls
2482 1224 Pls
2507 1235 Pls
2532 1246 Pls
2557 1257 Pls
2582 1268 Pls
2607 1279 Pls
2632 1290 Pls
2657 1300 Pls
2682 1311 Pls
2707 1322 Pls
2732 1333 Pls
2757 1344 Pls
2782 1355 Pls
2807 1366 Pls
2832 1376 Pls
2857 1387 Pls
2882 1398 Pls
2908 1409 Pls
2933 1420 Pls
2958 1431 Pls
2983 1442 Pls
3008 1453 Pls
3033 1463 Pls
3058 1474 Pls
3083 1840 Pls
3108 1855 Pls
3133 1869 Pls
3158 1884 Pls
3183 1898 Pls
3208 2659 Pls
3233 2681 Pls
3258 2703 Pls
3283 2724 Pls
3308 2746 Pls
3333 2768 Pls
3358 2789 Pls
3383 2811 Pls
3408 2833 Pls
3433 2855 Pls
3458 2876 Pls
3483 2898 Pls
3508 2920 Pls
3533 2942 Pls
3558 2963 Pls
3583 2985 Pls
3608 3007 Pls
3633 3029 Pls
3658 3050 Pls
3683 3072 Pls
3708 3094 Pls
3733 3116 Pls
3758 3137 Pls
3783 3159 Pls
3809 3181 Pls
3834 3202 Pls
3859 3224 Pls
3884 3246 Pls
3909 3268 Pls
3934 3289 Pls
3959 3311 Pls
3984 3333 Pls
4009 3355 Pls
4034 3376 Pls
4059 3398 Pls
4084 3420 Pls
4109 3442 Pls
4134 3463 Pls
4159 3485 Pls
4184 3507 Pls
4209 3529 Pls
4234 3550 Pls
4259 3572 Pls
4284 3594 Pls
4309 3616 Pls
4334 3637 Pls
4359 3659 Pls
4384 3681 Pls
4409 3702 Pls
4434 3724 Pls
4459 3746 Pls
4484 3768 Pls
4509 3789 Pls
4534 3811 Pls
4559 3833 Pls
4584 3855 Pls
4609 3876 Pls
4634 3898 Pls
4659 3920 Pls
4684 3942 Pls
4710 3963 Pls
4735 3985 Pls
4760 4007 Pls
4785 4029 Pls
4810 4050 Pls
4835 4072 Pls
4860 4094 Pls
4885 4115 Pls
4910 4137 Pls
4935 4159 Pls
4960 4181 Pls
4985 4202 Pls
5010 4224 Pls
5035 4246 Pls
5060 4268 Pls
5085 4289 Pls
5110 4311 Pls
5135 4333 Pls
5160 1732 Pls
5185 1739 Pls
5210 1746 Pls
5235 1753 Pls
5260 1761 Pls
5285 1768 Pls
5310 1775 Pls
5335 1782 Pls
5360 1790 Pls
5385 1797 Pls
5410 1804 Pls
5435 1811 Pls
5460 1818 Pls
5485 1826 Pls
5510 1833 Pls
5535 1840 Pls
5560 1847 Pls
5585 1855 Pls
5611 1862 Pls
5636 1869 Pls
5661 1876 Pls
5686 1884 Pls
5711 1891 Pls
5736 1898 Pls
5761 1905 Pls
5786 1913 Pls
5811 1920 Pls
5836 1927 Pls
5861 1934 Pls
5886 1942 Pls
5911 1949 Pls
5936 1956 Pls
5961 1963 Pls
5986 1971 Pls
6011 1978 Pls
6036 1985 Pls
6061 1992 Pls
6086 2000 Pls
6111 2007 Pls
6136 2014 Pls
6161 2021 Pls
6186 2029 Pls
6211 2036 Pls
6236 2043 Pls
6261 2050 Pls
6286 2058 Pls
6311 2065 Pls
6336 2072 Pls
6361 2079 Pls
6386 2087 Pls
6411 2094 Pls
6436 2101 Pls
6461 2108 Pls
6486 2116 Pls
6512 2123 Pls
6537 2130 Pls
6562 2137 Pls
6587 2145 Pls
6612 2152 Pls
6637 2159 Pls
6662 2166 Pls
6687 2174 Pls
6712 2181 Pls
6737 2188 Pls
6762 2195 Pls
6787 2203 Pls
6812 2210 Pls
6837 2217 Pls
6862 2224 Pls
6887 2232 Pls
6912 2239 Pls
6937 2246 Pls
6962 2253 Pls
6962 2253 Pls
6594 4739 Pls
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

%%EndDocument
 @endspecial 1271 5372 a(Slik)-5 b(a)31 b(4:)40 b(Propusnost)32
b(TCP/IP-a)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
